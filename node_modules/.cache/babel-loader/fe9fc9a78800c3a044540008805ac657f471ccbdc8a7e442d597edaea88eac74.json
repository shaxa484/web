{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isAuthenticated,setIsAuthenticated]=useState(false);const[password,setPassword]=useState('');const[files,setFiles]=useState([]);const correctPassword='1qw';// Change this to your desired password\nuseEffect(()=>{// Load previously uploaded files from localStorage\nconst savedFiles=JSON.parse(localStorage.getItem('uploadedFiles'))||[];setFiles(savedFiles);},[]);const handlePasswordSubmit=e=>{e.preventDefault();if(password===correctPassword){setIsAuthenticated(true);}else{alert('Incorrect password');}};const handleFileUpload=e=>{const file=e.target.files[0];if(file){const newFile={name:file.name,size:file.size,type:file.type,uploadDate:new Date().toLocaleString()};const updatedFiles=[...files,newFile];setFiles(updatedFiles);// Save to localStorage\nlocalStorage.setItem('uploadedFiles',JSON.stringify(updatedFiles));}};if(!isAuthenticated){return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handlePasswordSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enter Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Enter password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"File Upload System\"}),/*#__PURE__*/_jsx(\"div\",{className:\"upload-section\",children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileUpload,className:\"file-input\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"files-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Uploaded Files\"}),files.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No files uploaded yet\"}):/*#__PURE__*/_jsx(\"ul\",{children:files.map((file,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:file.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Size: \",(file.size/1024).toFixed(2),\" KB\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Type: \",file.type]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Uploaded: \",file.uploadDate]})]},index))})]})]});}export default App;/* Add this CSS to your App.css file */","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","isAuthenticated","setIsAuthenticated","password","setPassword","files","setFiles","correctPassword","savedFiles","JSON","parse","localStorage","getItem","handlePasswordSubmit","e","preventDefault","alert","handleFileUpload","file","target","newFile","name","size","type","uploadDate","Date","toLocaleString","updatedFiles","setItem","stringify","className","children","onSubmit","value","onChange","placeholder","length","map","index","toFixed"],"sources":["/Users/macstore.uz/Downloads/web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [password, setPassword] = useState('');\n  const [files, setFiles] = useState([]);\n  const correctPassword = '1qw'; // Change this to your desired password\n\n  useEffect(() => {\n    // Load previously uploaded files from localStorage\n    const savedFiles = JSON.parse(localStorage.getItem('uploadedFiles')) || [];\n    setFiles(savedFiles);\n  }, []);\n\n  const handlePasswordSubmit = (e) => {\n    e.preventDefault();\n    if (password === correctPassword) {\n      setIsAuthenticated(true);\n    } else {\n      alert('Incorrect password');\n    }\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const newFile = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        uploadDate: new Date().toLocaleString(),\n      };\n      \n      const updatedFiles = [...files, newFile];\n      setFiles(updatedFiles);\n      \n      // Save to localStorage\n      localStorage.setItem('uploadedFiles', JSON.stringify(updatedFiles));\n    }\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"login-container\">\n        <form onSubmit={handlePasswordSubmit}>\n          <h2>Enter Password</h2>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Enter password\"\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app-container\">\n      <h1>File Upload System</h1>\n      \n      <div className=\"upload-section\">\n        <input\n          type=\"file\"\n          onChange={handleFileUpload}\n          className=\"file-input\"\n        />\n      </div>\n\n      <div className=\"files-list\">\n        <h2>Uploaded Files</h2>\n        {files.length === 0 ? (\n          <p>No files uploaded yet</p>\n        ) : (\n          <ul>\n            {files.map((file, index) => (\n              <li key={index}>\n                <strong>{file.name}</strong>\n                <p>Size: {(file.size / 1024).toFixed(2)} KB</p>\n                <p>Type: {file.type}</p>\n                <p>Uploaded: {file.uploadDate}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n/* Add this CSS to your App.css file */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}